server {
    listen 80;
    server_name _;

    # ─── Security headers ────────────────────────────────────────
    add_header X-Frame-Options        "SAMEORIGIN" always;
    add_header X-XSS-Protection       "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy        "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self';
                                        script-src  'self' 'unsafe-inline' 'unsafe-eval';
                                        style-src   'self' 'unsafe-inline';
                                        img-src     'self' data: https:;
                                        font-src    'self' data:;
                                        connect-src 'self'
                                                    https://api.mistral.ai
                                                    https://api.cohere.ai
                                                    https://generativelanguage.googleapis.com
                                                    https://api-inference.huggingface.co;" always;

    # ─── Static files / SPA ──────────────────────────────────────
    root  /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    # ─── API proxy ───────────────────────────────────────────────
    location /api/ {

        # ----- CORS pre-flight -----
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin  '*' always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type  'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }

        # ----- Proxy to backend -----
        # 1) keep original path → $request_uri
        # 2) enable SNI so Render’s cert matches the host
        proxy_pass              https://aethernet-w1ss.onrender.com$request_uri;

        proxy_ssl_server_name   on;                       # REQUIRED for HTTPS upstream on Render
        proxy_ssl_name          aethernet-w1ss.onrender.com;
        proxy_ssl_verify        on;                       # set to off if you prefer
        proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

        proxy_http_version 1.1;
        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        # ----- CORS for normal responses -----
        add_header Access-Control-Allow-Origin  '*' always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range' always;
    }

    # ─── Error pages ─────────────────────────────────────────────
    error_page 404              /index.html;
    error_page 500 502 503 504  /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}